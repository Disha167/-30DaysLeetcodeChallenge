//ðŸŽ¯DAY 23 PROBLEM 1
//First transpose along the axis of top right to bottom left i.e.
// for I/P:   1 2 3      After transposing, we get :   8     9     6    3         9 6 3 
//            4 5 6                                      \     \     \            8 5 2
 //           7 8 9                                   7   4     5      2          7 4 1
//                                                                \
//                                                                  1
//
//Then reverse it:  i.e reverse of [[9,6,3],[8,5,2],[7,4,1]] is    [[7,4,1],[8,5,2],[9,6,3]]
//in matrix form, 7 4 1
//                8 5 2
//                9 6 3    is the anticlockwise image of given I/P

class Solution {
public:
    void rotate(vector<vector<int>>& matrix) {
        int n=matrix.size();
      int i=0;
            for(int j=n-2;j>=0;j--)
            {
                int a=i;
                int b=j;
                while(a+b<=(n-2))//SO THAT WE SWAP ONLY HALF WAY ALONG THE DIAGONAL
                {
                   swap( matrix[a][b],matrix[(n-1)-b][(n-1)-a]);
                    a++;
                    b++;
                }
            }
        int j=0;
        for( i=1;i<n-1;i++)
        {
            int a=i;
            int b=j;
                while(a+b<=(n-2))
                {
                   swap( matrix[a][b],matrix[(n-1)-b][(n-1)-a]);
                    a++;
                    b++;
                }
            
        }
        reverse(matrix.begin(),matrix.end());
        
    }
};
